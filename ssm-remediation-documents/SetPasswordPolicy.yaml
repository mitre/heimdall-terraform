description: |-
  # SetPasswordPolicy

  This SSM document is intended to be used for AWS Config remediation for 
  rules that monitor the IAM user password policy. 

  This remediation allows the following parameters:
  - AutomationAssumeRole
  - RequireUppercaseCharacters
  - RequireLowercaseCharacters
  - RequireSymbols
  - RequireNumbers
  - MinimumPasswordLength
  - PasswordReusePrevention
  - MaxPasswordAge

schemaVersion: "0.3"
assumeRole: "{{ AutomationAssumeRole }}"
parameters:
  AutomationAssumeRole:
    type: String
    description: "(Required) The ARN of the role that allows Automation to perform
      the actions on your behalf. If no role is specified, Systems Manager Automation
      uses your IAM permissions to run this runbook."
    default: ""
  RequireUppercaseCharacters:
    type: String
    description: "Require at least one uppercase character in password."
    allowedValues:
    - "true"
    - "false"
    default: "true"
  RequireLowercaseCharacters:
    type: String
    description: "Require at least one lowercase character in password."
    allowedValues:
    - "true"
    - "false"
    default: "true"
  RequireSymbols:
    type: String
    description: "Require at least one symbol in password."
    allowedValues:
    - "true"
    - "false"
    default: "true"
  RequireNumbers:
    type: String
    description: "Require at least one number in password."
    allowedValues:
    - "true"
    - "false"
    default: "true"
  MinimumPasswordLength:
    type: String
    description: "Password minimum length."
    allowedPattern: "^[0-9]{1,3}$"
    default: "10"
  PasswordReusePrevention:
    type: String
    description: "Number of passwords before allowing reuse.."
    allowedPattern: "^[0-9]{1,3}$"
    default: "24"
  MaxPasswordAge:
    type: String
    description: "Number of days before password expiration."
    allowedPattern: "^[0-9]{1,3}$"
    default: "90"
mainSteps:
  - name: executeScript
    action: "aws:executeScript"
    inputs:
      Runtime: python3.7
      Handler: script_handler
      InputPayload:
        RequireUppercaseCharacters: "{{ RequireUppercaseCharacters }}"
        RequireLowercaseCharacters: "{{ RequireLowercaseCharacters }}"
        RequireSymbols: "{{ RequireSymbols }}"
        RequireNumbers: "{{ RequireNumbers }}"
        MinimumPasswordLength: "{{ MinimumPasswordLength }}"
        PasswordReusePrevention: "{{ PasswordReusePrevention }}"
        MaxPasswordAge: "{{ MaxPasswordAge }}"
      Script: |-
        import boto3

        def script_handler(events, context):
            iam = boto3.resource("iam")
            account_password_policy = iam.AccountPasswordPolicy()
            response = account_password_policy.update(
                RequireUppercaseCharacters=events["RequireUppercaseCharacters"] == "true",
                RequireLowercaseCharacters=events["RequireLowercaseCharacters"] == "true",
                RequireSymbols=events["RequireSymbols"] == "true",
                RequireNumbers=events["RequireNumbers"] == "true",
                MinimumPasswordLength=int(events["MinimumPasswordLength"]),
                PasswordReusePrevention=int(events["PasswordReusePrevention"]),
                MaxPasswordAge=int(events["MaxPasswordAge"])
            )
            return { "response": str(response) }
